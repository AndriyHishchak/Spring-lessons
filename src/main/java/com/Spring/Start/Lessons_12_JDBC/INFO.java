package com.Spring.Start.Lessons_12_JDBC;

public class INFO {
    //TODO:     ***************************************************
    //TODO:     * Мета: * Попрацювати із JDBC за допомогою Spring *
    //TODO:     ***************************************************
    //TODO:     JDBC - [Java DataBase Connectivity]
    //TODO:     [Java DataBase Connectivity] - (соединение с базами данных на Java)
    //TODO:        платформенно независимый промышленный стандарт взаимодействия Java-приложений с различными СУБД,
    //TODO:          реализованный в виде пакета java.sql, входящего в состав Java SE.
    //TODO:     ---------------------------------------------------------------------------------------------------------------------------
    //TODO:     Spring даэ 2 механізма роботи із Data Bases із моделями
    //TODO:             1) Це Імплементація Repository Jpa or CRUD
    //TODO:             2) Це низькорівнева робота із Data Bases, де власноруч створюєш Repository та його реалызацію.
    //TODO:                      І достаючи із Spring Context bean який сконфігурували, використовуємо для наших нужд.
    //TODO:                     Наприклад : jdbcTemplate.query("select id, name, country, token from buyer",this::mapRowToBuyer)
    //TODO:         JdbcTemplate - інтерфейс, який предостовляє різні методи для роботи із ниськорівневневою роботою Databases
    //TODO:         BuyerRepoJDBC - bean який ми створили і описали реалізацію наших інтерфейсів
    //TODO:         query(...) - метод із інтерфейса (jdbcTemplate) за допомогою якого записуээмо SQL синтаксис
    //TODO:     ------------------------------------------------------------------------------------------------------------------------------------------
    //TODO:      JPA VS SpringJdbcTemplate
    //TODO:      JPA - нам потрыбно все правельно та жостко выдображати томущо ми використовуэмо домен модель для доступа в Databases
    //TODO:      SpringJdbcTemplate - тут нисько рівневий підхід і саме тому більше гнучкіший, але приходиться писати в рази більше коду, наж JPA or CRUD
    //TODO:     ------------------------------------------------------------------------------------------------------------------------------------------

}
